{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\servi\\\\Documents\\\\ReactProject3\\\\ReactProject4A\\\\webapp\\\\src\\\\pages\\\\NameForm.js\";\n\n/*eslint-disable no-unused-expressions */\nimport React from 'react';\n\nvar sha256 = require('js-sha256');\n\nclass NameForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.update = isLoggedIn => {\n      console.log(isLoggedIn);\n      this.props.onUpdate(isLoggedIn);\n      this.setState({\n        isLoggedIn: isLoggedIn\n      });\n    };\n\n    this.state = {\n      isLoggedIn: false\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleSubmit(e) {\n    alert(this.username.value);\n    alert(sha256(this.password.value));\n    fetch('http://localhost:3000/connexion', {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify({\n        'username': this.username.value,\n        'password': sha256(this.password.value)\n      })\n    }).then(response => response.json()) //If response is in json then in success\n    .then() //If response is not in json then in error\n    .catch(error => {\n      //Error \n      console.error(error);\n    });\n    setTimeout(() => {\n      var Http = new XMLHttpRequest();\n      var url = 'http://localhost:3000/connexion';\n      Http.open(\"GET\", url);\n      Http.send();\n\n      Http.onreadystatechange = function () {\n        if (this.readyState === 4 && this.status === 200) {\n          console.log(Http.response);\n          var json = JSON.parse(Http.response); //console.log(JSON.parse('{ \"fruit\": \"pineapple\", \"fingers\": 10 }'))\n\n          console.log(Http.response);\n          console.log(json.access);\n\n          if (json.access) {\n            update(true);\n          }\n        }\n      };\n    }, 350);\n    e.preventDefault();\n  }\n\n  render() {\n    return React.createElement(\"form\", {\n      style: {\n        position: 'absolute',\n        left: '50%',\n        top: '50%',\n        transform: 'translate(-50%, -50%)'\n      },\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      style: {\n        position: 'absolute',\n        left: '50%',\n        transform: 'translate(-50%, -50%)'\n      },\n      placeholder: \"username\",\n      ref: username => this.username = username,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }), \" \", React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      placeholder: \"password\",\n      type: \"text\",\n      ref: password => {\n        this.password = password;\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    })), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      style: {\n        position: 'absolute',\n        left: '50%',\n        transform: 'translate(-50%, -50%)'\n      },\n      type: \"submit\",\n      value: \"Submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default NameForm;","map":{"version":3,"sources":["C:/Users/servi/Documents/ReactProject3/ReactProject4A/webapp/src/pages/NameForm.js"],"names":["React","sha256","require","NameForm","Component","constructor","props","update","isLoggedIn","console","log","onUpdate","setState","state","handleSubmit","bind","e","alert","username","value","password","fetch","method","headers","body","JSON","stringify","then","response","json","catch","error","setTimeout","Http","XMLHttpRequest","url","open","send","onreadystatechange","readyState","status","parse","access","preventDefault","render","position","left","top","transform"],"mappings":";;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;;AACA,IAAIC,MAAM,GAAGC,OAAO,CAAC,WAAD,CAApB;;AAEA,MAAMC,QAAN,SAAuBH,KAAK,CAACI,SAA7B,CAAuC;AAErCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAQnBC,MARmB,GAQTC,UAAD,IAAgB;AACvBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,UAAZ;AACA,WAAKF,KAAL,CAAWK,QAAX,CAAoBH,UAApB;AACA,WAAKI,QAAL,CAAc;AAACJ,QAAAA,UAAU,EAAEA;AAAb,OAAd;AACD,KAZkB;;AAEjB,SAAKK,KAAL,GAAa;AACXL,MAAAA,UAAU,EAAE;AADD,KAAb;AAGA,SAAKM,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACD;;AAQDD,EAAAA,YAAY,CAACE,CAAD,EAAI;AACdC,IAAAA,KAAK,CAAC,KAAKC,QAAL,CAAcC,KAAf,CAAL;AACAF,IAAAA,KAAK,CAAChB,MAAM,CAAC,KAAKmB,QAAL,CAAcD,KAAf,CAAP,CAAL;AACAE,IAAAA,KAAK,CAAC,iCAAD,EAAoC;AACvCC,MAAAA,MAAM,EAAE,MAD+B;AAEvCC,MAAAA,OAAO,EAAE;AAAE,kBAAU,kBAAZ;AAAgC,wBAAe;AAA/C,OAF8B;AAGvCC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnB,oBAAY,KAAKR,QAAL,CAAcC,KADP;AAEnB,oBAAYlB,MAAM,CAAC,KAAKmB,QAAL,CAAcD,KAAf;AAFC,OAAf;AAHiC,KAApC,CAAL,CAQDQ,IARC,CAQKC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EARlB,EASF;AATE,KAUDF,IAVC,GAWF;AAXE,KAYDG,KAZC,CAYMC,KAAD,IAAW;AACd;AACAtB,MAAAA,OAAO,CAACsB,KAAR,CAAcA,KAAd;AACH,KAfC;AAiBDC,IAAAA,UAAU,CAAE,MAAM;AACjB,UAAIC,IAAI,GAAG,IAAIC,cAAJ,EAAX;AACA,UAAIC,GAAG,GAAC,iCAAR;AACAF,MAAAA,IAAI,CAACG,IAAL,CAAU,KAAV,EAAiBD,GAAjB;AACDF,MAAAA,IAAI,CAACI,IAAL;;AAECJ,MAAAA,IAAI,CAACK,kBAAL,GAA0B,YAAY;AACpC,YAAG,KAAKC,UAAL,KAAoB,CAApB,IAAyB,KAAKC,MAAL,KAAgB,GAA5C,EAAgD;AAC9C/B,UAAAA,OAAO,CAACC,GAAR,CAAYuB,IAAI,CAACL,QAAjB;AACA,cAAIC,IAAI,GAAGJ,IAAI,CAACgB,KAAL,CAAWR,IAAI,CAACL,QAAhB,CAAX,CAF8C,CAG9C;;AACAnB,UAAAA,OAAO,CAACC,GAAR,CAAYuB,IAAI,CAACL,QAAjB;AACAnB,UAAAA,OAAO,CAACC,GAAR,CAAYmB,IAAI,CAACa,MAAjB;;AACA,cAAGb,IAAI,CAACa,MAAR,EAAe;AACbnC,YAAAA,MAAM,CAAC,IAAD,CAAN;AACD;AACF;AACF,OAXD;AAYA,KAlBS,EAmBR,GAnBQ,CAAV;AAqBCS,IAAAA,CAAC,CAAC2B,cAAF;AACD;;AAGDC,EAAAA,MAAM,GAAG;AAEP,WACE;AAAM,MAAA,KAAK,EAAE;AACXC,QAAAA,QAAQ,EAAE,UADC;AACWC,QAAAA,IAAI,EAAE,KADjB;AACwBC,QAAAA,GAAG,EAAE,KAD7B;AAEXC,QAAAA,SAAS,EAAE;AAFA,OAAb;AAGC,MAAA,QAAQ,EAAE,KAAKlC,YAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEE;AAAQ,MAAA,KAAK,EAAE;AACjB+B,QAAAA,QAAQ,EAAE,UADO;AACKC,QAAAA,IAAI,EAAE,KADX;AAEjBE,QAAAA,SAAS,EAAE;AAFM,OAAf;AAGH,MAAA,WAAW,EAAC,UAHT;AAGoB,MAAA,GAAG,EAAG9B,QAAD,IAAc,KAAKA,QAAL,GAAgBA,QAHvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,OAKsE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALtE,EAME;AAAS,MAAA,WAAW,EAAC,UAArB;AAAgC,MAAA,IAAI,EAAC,MAArC;AAA4C,MAAA,GAAG,EAAGE,QAAD,IAAc;AACjD,aAAKA,QAAL,GAAgBA,QAAhB;AAAyB,OADvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,CAJF,EAeE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAfF,EAgBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAhBF,EAiBE;AAAO,MAAA,KAAK,EAAE;AACdyB,QAAAA,QAAQ,EAAE,UADI;AACQC,QAAAA,IAAI,EAAE,KADd;AAEdE,QAAAA,SAAS,EAAE;AAFG,OAAd;AAGF,MAAA,IAAI,EAAC,QAHH;AAGY,MAAA,KAAK,EAAC,QAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAjBF,CADF;AAwBD;;AAvFoC;;AA0FvC,eAAe7C,QAAf","sourcesContent":["/*eslint-disable no-unused-expressions */\r\nimport React from 'react'\r\nvar sha256 = require('js-sha256');\r\n\r\nclass NameForm extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isLoggedIn: false\r\n    }\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  update = (isLoggedIn) => {\r\n    console.log(isLoggedIn);\r\n    this.props.onUpdate(isLoggedIn);\r\n    this.setState({isLoggedIn: isLoggedIn});\r\n  };\r\n\r\n  handleSubmit(e) {\r\n    alert(this.username.value);\r\n    alert(sha256(this.password.value));\r\n    fetch('http://localhost:3000/connexion', {\r\n      method: 'POST',\r\n      headers: { 'Accept': 'application/json', 'Content-type':'application/json' },\r\n      body :JSON.stringify({\r\n        'username': this.username.value, \r\n        'password': sha256(this.password.value)\r\n      })\r\n  })\r\n  .then((response) => response.json())\r\n  //If response is in json then in success\r\n  .then()\r\n  //If response is not in json then in error\r\n  .catch((error) => {\r\n      //Error \r\n      console.error(error);\r\n  })\r\n  \r\n   setTimeout( () => {\r\n    var Http = new XMLHttpRequest();\r\n    var url='http://localhost:3000/connexion';\r\n    Http.open(\"GET\", url);\r\n   Http.send();\r\n\r\n    Http.onreadystatechange = function () {\r\n      if(this.readyState === 4 && this.status === 200){\r\n        console.log(Http.response);\r\n        var json = JSON.parse(Http.response);\r\n        //console.log(JSON.parse('{ \"fruit\": \"pineapple\", \"fingers\": 10 }'))\r\n        console.log(Http.response);\r\n        console.log(json.access);\r\n        if(json.access){\r\n          update(true);    \r\n        }\r\n      }\r\n    };\r\n   }\r\n   , 350);\r\n    \r\n    e.preventDefault();\r\n  }\r\n\r\n\r\n  render() {\r\n    \r\n    return (\r\n      <form style={{\r\n        position: 'absolute', left: '50%', top: '50%',\r\n        transform: 'translate(-50%, -50%)'\r\n    }} onSubmit={this.handleSubmit}>\r\n        <label>\r\n          \r\n          <input  style={{\r\n        position: 'absolute', left: '50%',\r\n        transform: 'translate(-50%, -50%)'\r\n    }} placeholder=\"username\" ref={(username) => this.username = username} /> <p></p>\r\n          <input   placeholder=\"password\" type=\"text\" ref={(password) => {\r\n                        this.password = password} \r\n          }\r\n          />\r\n        </label>\r\n        <p></p>\r\n        <p></p>\r\n        <input style={{\r\n        position: 'absolute', left: '50%',\r\n        transform: 'translate(-50%, -50%)'\r\n    }}type=\"submit\" value=\"Submit\" />\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NameForm;"]},"metadata":{},"sourceType":"module"}