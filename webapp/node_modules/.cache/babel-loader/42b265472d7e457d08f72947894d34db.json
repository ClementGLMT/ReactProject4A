{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\servi\\\\Documents\\\\ReactProject3\\\\ReactProject4A\\\\webapp\\\\src\\\\pages\\\\NameForm.js\";\n\n/*eslint-disable no-unused-expressions */\nimport React from 'react';\n\nvar sha256 = require('js-sha256');\n\nclass NameForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoggedIn: false,\n      isUnvalidated: \"false\",\n      update: isLoggedIn => {\n        console.log(\"in update \" + isLoggedIn);\n        this.props.onUpdate(isLoggedIn);\n        this.setState({\n          isLoggedIn: isLoggedIn\n        });\n      }\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleSubmit(e) {\n    var log = false;\n    var upd = this.state.update;\n    var us = this.username.value;\n    var pw = sha256(this.password.value);\n    this.username.value = \"\";\n    this.password.value = \"\"; //alert(this.username.value);\n    //alert(sha256(this.password.value));\n\n    fetch('http://localhost:3000/connexion', {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify({\n        'username': us,\n        'password': pw\n      })\n    }).then(response => response.json()) //If response is in json then in success\n    .then() //If response is not in json then in error\n    .catch(error => {\n      //Error \n      console.error(error);\n    });\n    setTimeout(() => {\n      var Http = new XMLHttpRequest();\n      var url = 'http://localhost:3000/connexion';\n      Http.open(\"GET\", url);\n      Http.send();\n\n      Http.onreadystatechange = function () {\n        if (this.readyState === 4 && this.status === 200) {\n          console.log(Http.response);\n          var json = JSON.parse(Http.response);\n          console.log(\"json access before assignment \" + json.access);\n          log = json.access;\n          upd(String(log));\n        }\n      };\n\n      this.setState({\n        isUnvalidated: String(log)\n      });\n    }, 350);\n    e.preventDefault();\n  }\n\n  render() {\n    return React.createElement(Form, {\n      isUnvalidated: this.state.isUnvalidated,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    });\n  }\n\n}\n\nfunction Form() {\n  if (this.props.isUnvalidated === \"false\") {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      style: {\n        position: 'absolute',\n        left: '50%',\n        top: '50%',\n        transform: 'translate(-50%, -50%)'\n      },\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      style: {\n        position: 'absolute',\n        left: '50%',\n        transform: 'translate(-50%, -50%)'\n      },\n      placeholder: \"username\",\n      ref: username => this.username = username,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }), \" \", React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      placeholder: \"password\",\n      type: \"password\",\n      ref: password => {\n        this.password = password;\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    })), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      style: {\n        position: 'absolute',\n        left: '50%',\n        transform: 'translate(-50%, -50%)'\n      },\n      type: \"submit\",\n      value: \"Submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    })));\n  } else {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      color: \"red\",\n      style: {\n        position: 'absolute',\n        left: '50%',\n        transform: 'translate(-50%, -50%)'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, \"Wrong Credentials !\"), React.createElement(\"form\", {\n      style: {\n        position: 'absolute',\n        left: '50%',\n        transform: 'translate(-50%, -50%)'\n      },\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      style: {\n        position: 'absolute',\n        left: '50%',\n        transform: 'translate(-50%, -50%)'\n      },\n      placeholder: \"username\",\n      ref: username => this.username = username,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }), \" \", React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      placeholder: \"password\",\n      type: \"password\",\n      ref: password => {\n        this.password = password;\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    })), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      style: {\n        position: 'absolute',\n        left: '50%',\n        transform: 'translate(-50%, -50%)'\n      },\n      type: \"submit\",\n      value: \"Submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    })));\n  }\n}\n\nexport default NameForm;","map":{"version":3,"sources":["C:/Users/servi/Documents/ReactProject3/ReactProject4A/webapp/src/pages/NameForm.js"],"names":["React","sha256","require","NameForm","Component","constructor","props","state","isLoggedIn","isUnvalidated","update","console","log","onUpdate","setState","handleSubmit","bind","e","upd","us","username","value","pw","password","fetch","method","headers","body","JSON","stringify","then","response","json","catch","error","setTimeout","Http","XMLHttpRequest","url","open","send","onreadystatechange","readyState","status","parse","access","String","preventDefault","render","Form","position","left","top","transform"],"mappings":"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","sourcesContent":["/*eslint-disable no-unused-expressions */\r\nimport React from 'react'\r\nvar sha256 = require('js-sha256');\r\n\r\nclass NameForm extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isLoggedIn: false,\r\n      isUnvalidated: \"false\",\r\n      update: (isLoggedIn) => {\r\n        console.log(\"in update \"+isLoggedIn);\r\n        this.props.onUpdate(isLoggedIn);\r\n        this.setState({isLoggedIn: isLoggedIn});\r\n      }\r\n    }\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  \r\n\r\n  handleSubmit(e) {\r\n    var log=false;\r\n    var upd = this.state.update;\r\n    var us = this.username.value;\r\n    var pw =  sha256(this.password.value);\r\n    this.username.value = \"\";\r\n    this.password.value = \"\";\r\n\r\n    //alert(this.username.value);\r\n    //alert(sha256(this.password.value));\r\n    fetch('http://localhost:3000/connexion', {\r\n      method: 'POST',\r\n      headers: { 'Accept': 'application/json', 'Content-type':'application/json' },\r\n      body :JSON.stringify({\r\n        'username': us, \r\n        'password': pw\r\n      })\r\n  })\r\n  .then((response) => response.json())\r\n  //If response is in json then in success\r\n  .then()\r\n  //If response is not in json then in error\r\n  .catch((error) => {\r\n      //Error \r\n      console.error(error);\r\n  })\r\n  \r\n   setTimeout( () => {\r\n    var Http = new XMLHttpRequest();\r\n    var url='http://localhost:3000/connexion';\r\n    Http.open(\"GET\", url);\r\n   Http.send();\r\n\r\n    Http.onreadystatechange = function () {\r\n      if(this.readyState === 4 && this.status === 200){\r\n        console.log(Http.response);\r\n        var json = JSON.parse(Http.response);\r\n        console.log(\"json access before assignment \"+json.access);\r\n        log=json.access;\r\n        upd(String(log));\r\n      }\r\n    }\r\n    this.setState({isUnvalidated: String(log)})\r\n    ;\r\n   }\r\n   , 350);\r\n \r\n    e.preventDefault();\r\n  }\r\n\r\n\r\n  render() {\r\n    \r\n    return <Form isUnvalidated={this.state.isUnvalidated}/>\r\n  }\r\n}\r\n\r\nfunction Form(){\r\n  if(this.props.isUnvalidated === \"false\"){\r\n    return(\r\n      <div>\r\n    <form style={{\r\n      position: 'absolute', left: '50%', top: '50%',\r\n      transform: 'translate(-50%, -50%)'\r\n  }} onSubmit={this.handleSubmit}>\r\n      <label>\r\n        \r\n        <input  style={{\r\n      position: 'absolute', left: '50%',\r\n      transform: 'translate(-50%, -50%)'\r\n  }} placeholder=\"username\" ref={(username) => this.username = username} /> <p></p>\r\n        <input  placeholder=\"password\" type=\"password\" ref={(password) => {\r\n                      this.password = password} \r\n        }\r\n        />\r\n      </label>\r\n      <p></p>\r\n      <p></p>\r\n      <input style={{\r\n      position: 'absolute', left: '50%',\r\n      transform: 'translate(-50%, -50%)'\r\n  }}type=\"submit\" value=\"Submit\" />\r\n    </form>\r\n    </div>\r\n    )\r\n  }\r\n  else {\r\n    return(\r\n      <div>\r\n    <p color=\"red\" style={{\r\n      position: 'absolute', left: '50%', \r\n      transform: 'translate(-50%, -50%)'}}>Wrong Credentials !</p>\r\n    <form style={{\r\n      position: 'absolute', left: '50%',\r\n      transform: 'translate(-50%, -50%)'\r\n  }} onSubmit={this.handleSubmit}>\r\n      <label>\r\n        \r\n        <input  style={{\r\n      position: 'absolute', left: '50%',\r\n      transform: 'translate(-50%, -50%)'\r\n  }} placeholder=\"username\" ref={(username) => this.username = username} /> <p></p>\r\n        <input  placeholder=\"password\" type=\"password\" ref={(password) => {\r\n                      this.password = password} \r\n        }\r\n        />\r\n      </label>\r\n      <p></p>\r\n      <p></p>\r\n      <input style={{\r\n      position: 'absolute', left: '50%',\r\n      transform: 'translate(-50%, -50%)'\r\n  }}type=\"submit\" value=\"Submit\" />\r\n    </form>\r\n    </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default NameForm;"]},"metadata":{},"sourceType":"module"}